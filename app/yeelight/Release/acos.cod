; Listing generated by Microsoft (R) Optimizing Compiler Version 19.13.26128.0 

	TITLE	C:\HelloX\personal\HelloX_OS\app\yeelight\hxlib\acos.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_acos
PUBLIC	__real@0000000000000000
PUBLIC	__real@3c91a62633145c07
PUBLIC	__real@3f023de10dfdf709
PUBLIC	__real@3f49efe07501b288
PUBLIC	__real@3fb3b8c5b12e9282
PUBLIC	__real@3fc5555555555555
PUBLIC	__real@3fc9c1550e884455
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff921fb54442d18
PUBLIC	__real@4000000000000000
PUBLIC	__real@40002ae59c598ac8
PUBLIC	__real@400921fb54442d18
PUBLIC	__real@bfa48228b5688f3b
PUBLIC	__real@bfd4d61203eb6f7d
PUBLIC	__real@bfe6066c1b8d0159
PUBLIC	__real@c0033a271c8a2d4b
EXTRN	_sqrt:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@c0033a271c8a2d4b
CONST	SEGMENT
__real@c0033a271c8a2d4b DQ 0c0033a271c8a2d4br	; -2.40339
CONST	ENDS
;	COMDAT __real@bfe6066c1b8d0159
CONST	SEGMENT
__real@bfe6066c1b8d0159 DQ 0bfe6066c1b8d0159r	; -0.688284
CONST	ENDS
;	COMDAT __real@bfd4d61203eb6f7d
CONST	SEGMENT
__real@bfd4d61203eb6f7d DQ 0bfd4d61203eb6f7dr	; -0.325566
CONST	ENDS
;	COMDAT __real@bfa48228b5688f3b
CONST	SEGMENT
__real@bfa48228b5688f3b DQ 0bfa48228b5688f3br	; -0.0400555
CONST	ENDS
;	COMDAT __real@400921fb54442d18
CONST	SEGMENT
__real@400921fb54442d18 DQ 0400921fb54442d18r	; 3.14159
CONST	ENDS
;	COMDAT __real@40002ae59c598ac8
CONST	SEGMENT
__real@40002ae59c598ac8 DQ 040002ae59c598ac8r	; 2.02095
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff921fb54442d18
CONST	SEGMENT
__real@3ff921fb54442d18 DQ 03ff921fb54442d18r	; 1.5708
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fc9c1550e884455
CONST	SEGMENT
__real@3fc9c1550e884455 DQ 03fc9c1550e884455r	; 0.201213
CONST	ENDS
;	COMDAT __real@3fc5555555555555
CONST	SEGMENT
__real@3fc5555555555555 DQ 03fc5555555555555r	; 0.166667
CONST	ENDS
;	COMDAT __real@3fb3b8c5b12e9282
CONST	SEGMENT
__real@3fb3b8c5b12e9282 DQ 03fb3b8c5b12e9282r	; 0.0770382
CONST	ENDS
;	COMDAT __real@3f49efe07501b288
CONST	SEGMENT
__real@3f49efe07501b288 DQ 03f49efe07501b288r	; 0.000791535
CONST	ENDS
;	COMDAT __real@3f023de10dfdf709
CONST	SEGMENT
__real@3f023de10dfdf709 DQ 03f023de10dfdf709r	; 3.47933e-05
CONST	ENDS
;	COMDAT __real@3c91a62633145c07
CONST	SEGMENT
__real@3c91a62633145c07 DQ 03c91a62633145c07r	; 6.12323e-17
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
; Function compile flags: /Odtp
; File c:\hellox\personal\hellox_os\app\yeelight\hxlib\acos.c
;	COMDAT _acos
_TEXT	SEGMENT
_c$ = -72						; size = 8
_w$ = -64						; size = 8
_df$ = -56						; size = 8
_r$ = -48						; size = 8
_q$ = -40						; size = 8
_p$ = -32						; size = 8
_s$ = -24						; size = 8
_z$ = -16						; size = 8
_hx$ = -8						; size = 4
_ix$ = -4						; size = 4
_x$ = 8							; size = 8
_acos	PROC						; COMDAT

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H

; 74   :   double z, p, q, r, w, s, c, df;
; 75   :   int hx, ix;
; 76   : 
; 77   :   hx = __HI (x);

  00006	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp+4]
  00009	89 45 f8	 mov	 DWORD PTR _hx$[ebp], eax

; 78   :   ix = hx & 0x7fffffff;

  0000c	8b 4d f8	 mov	 ecx, DWORD PTR _hx$[ebp]
  0000f	81 e1 ff ff ff
	7f		 and	 ecx, 2147483647		; 7fffffffH
  00015	89 4d fc	 mov	 DWORD PTR _ix$[ebp], ecx

; 79   :   if (ix >= 0x3ff00000) /* |x| >= 1 */

  00018	81 7d fc 00 00
	f0 3f		 cmp	 DWORD PTR _ix$[ebp], 1072693248 ; 3ff00000H
  0001f	7c 3b		 jl	 SHORT $LN2@acos

; 80   :   {
; 81   :     if (((ix - 0x3ff00000) | __LO (x)) == 0) /* |x| == 1 */

  00021	8b 55 fc	 mov	 edx, DWORD PTR _ix$[ebp]
  00024	81 ea 00 00 f0
	3f		 sub	 edx, 1072693248		; 3ff00000H
  0002a	0b 55 08	 or	 edx, DWORD PTR _x$[ebp]
  0002d	75 1a		 jne	 SHORT $LN5@acos

; 82   :     {
; 83   :       if (hx > 0) /* acos(1) = 0  */

  0002f	83 7d f8 00	 cmp	 DWORD PTR _hx$[ebp], 0
  00033	7e 09		 jle	 SHORT $LN4@acos

; 84   :       {
; 85   :         return 0.0;

  00035	d9 ee		 fldz
  00037	e9 62 02 00 00	 jmp	 $LN10@acos

; 86   :       }

  0003c	eb 0b		 jmp	 SHORT $LN5@acos
$LN4@acos:

; 87   :       else /* acos(-1) = pi */
; 88   :       {
; 89   :         return pi + 2.0 * pio2_lo;

  0003e	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@400921fb54442d18
  00044	e9 55 02 00 00	 jmp	 $LN10@acos
$LN5@acos:

; 90   :       }
; 91   :     }
; 92   :     return (x - x) / (x - x); /* acos(|x|>1) is NaN */

  00049	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  0004c	dc 65 08	 fsub	 QWORD PTR _x$[ebp]
  0004f	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  00052	dc 65 08	 fsub	 QWORD PTR _x$[ebp]
  00055	de f9		 fdivp	 ST(1), ST(0)
  00057	e9 42 02 00 00	 jmp	 $LN10@acos
$LN2@acos:

; 93   :   }
; 94   :   if (ix < 0x3fe00000) /* |x| < 0.5 */

  0005c	81 7d fc 00 00
	e0 3f		 cmp	 DWORD PTR _ix$[ebp], 1071644672 ; 3fe00000H
  00063	0f 8d a9 00 00
	00		 jge	 $LN6@acos

; 95   :   {
; 96   :     if (ix <= 0x3c600000) /* if |x| < 2**-57 */

  00069	81 7d fc 00 00
	60 3c		 cmp	 DWORD PTR _ix$[ebp], 1012924416 ; 3c600000H
  00070	7f 0b		 jg	 SHORT $LN8@acos

; 97   :     {
; 98   :       return pio2_hi + pio2_lo;

  00072	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@3ff921fb54442d18
  00078	e9 21 02 00 00	 jmp	 $LN10@acos
$LN8@acos:

; 99   :     }
; 100  :     z = x * x;

  0007d	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  00080	dc 4d 08	 fmul	 QWORD PTR _x$[ebp]
  00083	dd 5d f0	 fstp	 QWORD PTR _z$[ebp]

; 101  :     p = z * (pS0 + z * (pS1 + z * (pS2 + z * (pS3 + z * (pS4 + z * pS5)))));

  00086	dd 45 f0	 fld	 QWORD PTR _z$[ebp]
  00089	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3f023de10dfdf709
  0008f	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3f49efe07501b288
  00095	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  00098	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfa48228b5688f3b
  0009e	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  000a1	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fc9c1550e884455
  000a7	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  000aa	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfd4d61203eb6f7d
  000b0	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  000b3	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fc5555555555555
  000b9	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  000bc	dd 5d e0	 fstp	 QWORD PTR _p$[ebp]

; 102  :     q = one + z * (qS1 + z * (qS2 + z * (qS3 + z * qS4)));

  000bf	dd 45 f0	 fld	 QWORD PTR _z$[ebp]
  000c2	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3fb3b8c5b12e9282
  000c8	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfe6066c1b8d0159
  000ce	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  000d1	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@40002ae59c598ac8
  000d7	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  000da	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@c0033a271c8a2d4b
  000e0	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  000e3	d9 e8		 fld1
  000e5	de c1		 faddp	 ST(1), ST(0)
  000e7	dd 5d d8	 fstp	 QWORD PTR _q$[ebp]

; 103  :     r = p / q;

  000ea	dd 45 e0	 fld	 QWORD PTR _p$[ebp]
  000ed	dc 75 d8	 fdiv	 QWORD PTR _q$[ebp]
  000f0	dd 5d d0	 fstp	 QWORD PTR _r$[ebp]

; 104  :     return pio2_hi - (x - (pio2_lo - x * r));

  000f3	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  000f6	dc 4d d0	 fmul	 QWORD PTR _r$[ebp]
  000f9	dc 2d 00 00 00
	00		 fsubr	 QWORD PTR __real@3c91a62633145c07
  000ff	dc 6d 08	 fsubr	 QWORD PTR _x$[ebp]
  00102	dc 2d 00 00 00
	00		 fsubr	 QWORD PTR __real@3ff921fb54442d18
  00108	e9 91 01 00 00	 jmp	 $LN10@acos

; 105  :   }

  0010d	e9 8c 01 00 00	 jmp	 $LN10@acos
$LN6@acos:

; 106  :   else if (hx < 0) /* x < -0.5 */

  00112	83 7d f8 00	 cmp	 DWORD PTR _hx$[ebp], 0
  00116	0f 8d ba 00 00
	00		 jge	 $LN9@acos

; 107  :   {
; 108  :     z = (one + x) * 0.5;

  0011c	d9 e8		 fld1
  0011e	dc 45 08	 fadd	 QWORD PTR _x$[ebp]
  00121	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3fe0000000000000
  00127	dd 5d f0	 fstp	 QWORD PTR _z$[ebp]

; 109  :     p = z * (pS0 + z * (pS1 + z * (pS2 + z * (pS3 + z * (pS4 + z * pS5)))));

  0012a	dd 45 f0	 fld	 QWORD PTR _z$[ebp]
  0012d	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3f023de10dfdf709
  00133	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3f49efe07501b288
  00139	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  0013c	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfa48228b5688f3b
  00142	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  00145	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fc9c1550e884455
  0014b	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  0014e	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfd4d61203eb6f7d
  00154	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  00157	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fc5555555555555
  0015d	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  00160	dd 5d e0	 fstp	 QWORD PTR _p$[ebp]

; 110  :     q = one + z * (qS1 + z * (qS2 + z * (qS3 + z * qS4)));

  00163	dd 45 f0	 fld	 QWORD PTR _z$[ebp]
  00166	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3fb3b8c5b12e9282
  0016c	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfe6066c1b8d0159
  00172	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  00175	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@40002ae59c598ac8
  0017b	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  0017e	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@c0033a271c8a2d4b
  00184	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  00187	d9 e8		 fld1
  00189	de c1		 faddp	 ST(1), ST(0)
  0018b	dd 5d d8	 fstp	 QWORD PTR _q$[ebp]

; 111  :     s = sqrt (z);

  0018e	83 ec 08	 sub	 esp, 8
  00191	dd 45 f0	 fld	 QWORD PTR _z$[ebp]
  00194	dd 1c 24	 fstp	 QWORD PTR [esp]
  00197	e8 00 00 00 00	 call	 _sqrt
  0019c	83 c4 08	 add	 esp, 8
  0019f	dd 5d e8	 fstp	 QWORD PTR _s$[ebp]

; 112  :     r = p / q;

  001a2	dd 45 e0	 fld	 QWORD PTR _p$[ebp]
  001a5	dc 75 d8	 fdiv	 QWORD PTR _q$[ebp]
  001a8	dd 5d d0	 fstp	 QWORD PTR _r$[ebp]

; 113  :     w = r * s - pio2_lo;

  001ab	dd 45 d0	 fld	 QWORD PTR _r$[ebp]
  001ae	dc 4d e8	 fmul	 QWORD PTR _s$[ebp]
  001b1	dc 25 00 00 00
	00		 fsub	 QWORD PTR __real@3c91a62633145c07
  001b7	dd 5d c0	 fstp	 QWORD PTR _w$[ebp]

; 114  :     return pi - 2.0 * (s + w);

  001ba	dd 45 e8	 fld	 QWORD PTR _s$[ebp]
  001bd	dc 45 c0	 fadd	 QWORD PTR _w$[ebp]
  001c0	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@4000000000000000
  001c6	dc 2d 00 00 00
	00		 fsubr	 QWORD PTR __real@400921fb54442d18
  001cc	e9 cd 00 00 00	 jmp	 $LN10@acos

; 115  :   }

  001d1	e9 c8 00 00 00	 jmp	 $LN10@acos
$LN9@acos:

; 116  :   else /* x > 0.5 */
; 117  :   {
; 118  :     z = (one - x) * 0.5;

  001d6	d9 e8		 fld1
  001d8	dc 65 08	 fsub	 QWORD PTR _x$[ebp]
  001db	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3fe0000000000000
  001e1	dd 5d f0	 fstp	 QWORD PTR _z$[ebp]

; 119  :     s = sqrt (z);

  001e4	83 ec 08	 sub	 esp, 8
  001e7	dd 45 f0	 fld	 QWORD PTR _z$[ebp]
  001ea	dd 1c 24	 fstp	 QWORD PTR [esp]
  001ed	e8 00 00 00 00	 call	 _sqrt
  001f2	83 c4 08	 add	 esp, 8
  001f5	dd 5d e8	 fstp	 QWORD PTR _s$[ebp]

; 120  :     df = s;

  001f8	dd 45 e8	 fld	 QWORD PTR _s$[ebp]
  001fb	dd 5d c8	 fstp	 QWORD PTR _df$[ebp]

; 121  :     __LO (df) = 0;

  001fe	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _df$[ebp], 0

; 122  :     c = (z - df * df) / (s + df);

  00205	dd 45 c8	 fld	 QWORD PTR _df$[ebp]
  00208	dc 4d c8	 fmul	 QWORD PTR _df$[ebp]
  0020b	dc 6d f0	 fsubr	 QWORD PTR _z$[ebp]
  0020e	dd 45 e8	 fld	 QWORD PTR _s$[ebp]
  00211	dc 45 c8	 fadd	 QWORD PTR _df$[ebp]
  00214	de f9		 fdivp	 ST(1), ST(0)
  00216	dd 5d b8	 fstp	 QWORD PTR _c$[ebp]

; 123  :     p = z * (pS0 + z * (pS1 + z * (pS2 + z * (pS3 + z * (pS4 + z * pS5)))));

  00219	dd 45 f0	 fld	 QWORD PTR _z$[ebp]
  0021c	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3f023de10dfdf709
  00222	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3f49efe07501b288
  00228	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  0022b	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfa48228b5688f3b
  00231	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  00234	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fc9c1550e884455
  0023a	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  0023d	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfd4d61203eb6f7d
  00243	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  00246	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fc5555555555555
  0024c	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  0024f	dd 5d e0	 fstp	 QWORD PTR _p$[ebp]

; 124  :     q = one + z * (qS1 + z * (qS2 + z * (qS3 + z * qS4)));

  00252	dd 45 f0	 fld	 QWORD PTR _z$[ebp]
  00255	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3fb3b8c5b12e9282
  0025b	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfe6066c1b8d0159
  00261	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  00264	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@40002ae59c598ac8
  0026a	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  0026d	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@c0033a271c8a2d4b
  00273	dc 4d f0	 fmul	 QWORD PTR _z$[ebp]
  00276	d9 e8		 fld1
  00278	de c1		 faddp	 ST(1), ST(0)
  0027a	dd 5d d8	 fstp	 QWORD PTR _q$[ebp]

; 125  :     r = p / q;

  0027d	dd 45 e0	 fld	 QWORD PTR _p$[ebp]
  00280	dc 75 d8	 fdiv	 QWORD PTR _q$[ebp]
  00283	dd 5d d0	 fstp	 QWORD PTR _r$[ebp]

; 126  :     w = r * s + c;

  00286	dd 45 d0	 fld	 QWORD PTR _r$[ebp]
  00289	dc 4d e8	 fmul	 QWORD PTR _s$[ebp]
  0028c	dc 45 b8	 fadd	 QWORD PTR _c$[ebp]
  0028f	dd 5d c0	 fstp	 QWORD PTR _w$[ebp]

; 127  :     return 2.0 * (df + w);

  00292	dd 45 c8	 fld	 QWORD PTR _df$[ebp]
  00295	dc 45 c0	 fadd	 QWORD PTR _w$[ebp]
  00298	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@4000000000000000
$LN10@acos:

; 128  :   }
; 129  : } /* acos */

  0029e	8b e5		 mov	 esp, ebp
  002a0	5d		 pop	 ebp
  002a1	c3		 ret	 0
_acos	ENDP
_TEXT	ENDS
END
