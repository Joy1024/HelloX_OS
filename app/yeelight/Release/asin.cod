; Listing generated by Microsoft (R) Optimizing Compiler Version 19.13.26128.0 

	TITLE	C:\HelloX\personal\HelloX_OS\app\yeelight\hxlib\asin.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_asin
PUBLIC	__real@3c91a62633145c07
PUBLIC	__real@3f023de10dfdf709
PUBLIC	__real@3f49efe07501b288
PUBLIC	__real@3fb3b8c5b12e9282
PUBLIC	__real@3fc5555555555555
PUBLIC	__real@3fc9c1550e884455
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe921fb54442d18
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff921fb54442d18
PUBLIC	__real@4000000000000000
PUBLIC	__real@40002ae59c598ac8
PUBLIC	__real@7e37e43c8800759c
PUBLIC	__real@bfa48228b5688f3b
PUBLIC	__real@bfd4d61203eb6f7d
PUBLIC	__real@bfe6066c1b8d0159
PUBLIC	__real@c0033a271c8a2d4b
EXTRN	_sqrt:PROC
EXTRN	_fabs:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@c0033a271c8a2d4b
CONST	SEGMENT
__real@c0033a271c8a2d4b DQ 0c0033a271c8a2d4br	; -2.40339
CONST	ENDS
;	COMDAT __real@bfe6066c1b8d0159
CONST	SEGMENT
__real@bfe6066c1b8d0159 DQ 0bfe6066c1b8d0159r	; -0.688284
CONST	ENDS
;	COMDAT __real@bfd4d61203eb6f7d
CONST	SEGMENT
__real@bfd4d61203eb6f7d DQ 0bfd4d61203eb6f7dr	; -0.325566
CONST	ENDS
;	COMDAT __real@bfa48228b5688f3b
CONST	SEGMENT
__real@bfa48228b5688f3b DQ 0bfa48228b5688f3br	; -0.0400555
CONST	ENDS
;	COMDAT __real@7e37e43c8800759c
CONST	SEGMENT
__real@7e37e43c8800759c DQ 07e37e43c8800759cr	; 1e+300
CONST	ENDS
;	COMDAT __real@40002ae59c598ac8
CONST	SEGMENT
__real@40002ae59c598ac8 DQ 040002ae59c598ac8r	; 2.02095
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff921fb54442d18
CONST	SEGMENT
__real@3ff921fb54442d18 DQ 03ff921fb54442d18r	; 1.5708
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe921fb54442d18
CONST	SEGMENT
__real@3fe921fb54442d18 DQ 03fe921fb54442d18r	; 0.785398
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fc9c1550e884455
CONST	SEGMENT
__real@3fc9c1550e884455 DQ 03fc9c1550e884455r	; 0.201213
CONST	ENDS
;	COMDAT __real@3fc5555555555555
CONST	SEGMENT
__real@3fc5555555555555 DQ 03fc5555555555555r	; 0.166667
CONST	ENDS
;	COMDAT __real@3fb3b8c5b12e9282
CONST	SEGMENT
__real@3fb3b8c5b12e9282 DQ 03fb3b8c5b12e9282r	; 0.0770382
CONST	ENDS
;	COMDAT __real@3f49efe07501b288
CONST	SEGMENT
__real@3f49efe07501b288 DQ 03f49efe07501b288r	; 0.000791535
CONST	ENDS
;	COMDAT __real@3f023de10dfdf709
CONST	SEGMENT
__real@3f023de10dfdf709 DQ 03f023de10dfdf709r	; 3.47933e-05
CONST	ENDS
;	COMDAT __real@3c91a62633145c07
CONST	SEGMENT
__real@3c91a62633145c07 DQ 03c91a62633145c07r	; 6.12323e-17
CONST	ENDS
; Function compile flags: /Odtp
; File c:\hellox\personal\hellox_os\app\yeelight\hxlib\asin.c
;	COMDAT _asin
_TEXT	SEGMENT
_c$ = -64						; size = 8
_r$ = -56						; size = 8
_s$ = -48						; size = 8
_q$ = -40						; size = 8
_p$ = -32						; size = 8
_w$ = -24						; size = 8
_t$ = -16						; size = 8
_hx$ = -8						; size = 4
_ix$ = -4						; size = 4
_x$ = 8							; size = 8
_asin	PROC						; COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H

; 81   :   double t, w, p, q, c, r, s;
; 82   :   int hx, ix;
; 83   : 
; 84   :   hx = __HI (x);

  00006	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp+4]
  00009	89 45 f8	 mov	 DWORD PTR _hx$[ebp], eax

; 85   :   ix = hx & 0x7fffffff;

  0000c	8b 4d f8	 mov	 ecx, DWORD PTR _hx$[ebp]
  0000f	81 e1 ff ff ff
	7f		 and	 ecx, 2147483647		; 7fffffffH
  00015	89 4d fc	 mov	 DWORD PTR _ix$[ebp], ecx

; 86   :   if (ix >= 0x3ff00000) /* |x| >= 1 */

  00018	81 7d fc 00 00
	f0 3f		 cmp	 DWORD PTR _ix$[ebp], 1072693248 ; 3ff00000H
  0001f	7c 3f		 jl	 SHORT $LN2@asin

; 87   :   {
; 88   :     if (((ix - 0x3ff00000) | __LO (x)) == 0) /* asin(1) = +-pi/2 with inexact */

  00021	8b 55 fc	 mov	 edx, DWORD PTR _ix$[ebp]
  00024	81 ea 00 00 f0
	3f		 sub	 edx, 1072693248		; 3ff00000H
  0002a	0b 55 08	 or	 edx, DWORD PTR _x$[ebp]
  0002d	75 19		 jne	 SHORT $LN4@asin

; 89   :     {
; 90   :       return x * pio2_hi + x * pio2_lo;

  0002f	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  00032	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3ff921fb54442d18
  00038	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  0003b	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3c91a62633145c07
  00041	de c1		 faddp	 ST(1), ST(0)
  00043	e9 1b 02 00 00	 jmp	 $LN11@asin
$LN4@asin:

; 91   :     }
; 92   :     return (x - x) / (x - x); /* asin(|x|>1) is NaN */

  00048	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  0004b	dc 65 08	 fsub	 QWORD PTR _x$[ebp]
  0004e	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  00051	dc 65 08	 fsub	 QWORD PTR _x$[ebp]
  00054	de f9		 fdivp	 ST(1), ST(0)
  00056	e9 08 02 00 00	 jmp	 $LN11@asin

; 93   :   }

  0005b	e9 b8 00 00 00	 jmp	 $LN5@asin
$LN2@asin:

; 94   :   else if (ix < 0x3fe00000) /* |x| < 0.5 */

  00060	81 7d fc 00 00
	e0 3f		 cmp	 DWORD PTR _ix$[ebp], 1071644672 ; 3fe00000H
  00067	0f 8d ab 00 00
	00		 jge	 $LN5@asin

; 95   :   {
; 96   :     if (ix < 0x3e400000) /* if |x| < 2**-27 */

  0006d	81 7d fc 00 00
	40 3e		 cmp	 DWORD PTR _ix$[ebp], 1044381696 ; 3e400000H
  00074	7d 1e		 jge	 SHORT $LN7@asin

; 97   :     {
; 98   :       if (huge + x > one) /* return x with inexact if x != 0 */

  00076	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@7e37e43c8800759c
  0007c	dc 45 08	 fadd	 QWORD PTR _x$[ebp]
  0007f	dc 1d 00 00 00
	00		 fcomp	 QWORD PTR __real@3ff0000000000000
  00085	df e0		 fnstsw	 ax
  00087	f6 c4 41	 test	 ah, 65			; 00000041H
  0008a	75 08		 jne	 SHORT $LN7@asin

; 99   :       {
; 100  :         return x;

  0008c	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  0008f	e9 cf 01 00 00	 jmp	 $LN11@asin
$LN7@asin:

; 101  :       }
; 102  :     }
; 103  :     t = x * x;

  00094	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  00097	dc 4d 08	 fmul	 QWORD PTR _x$[ebp]
  0009a	dd 5d f0	 fstp	 QWORD PTR _t$[ebp]

; 104  :     p = t * (pS0 + t * (pS1 + t * (pS2 + t * (pS3 + t * (pS4 + t * pS5)))));

  0009d	dd 45 f0	 fld	 QWORD PTR _t$[ebp]
  000a0	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3f023de10dfdf709
  000a6	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3f49efe07501b288
  000ac	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  000af	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfa48228b5688f3b
  000b5	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  000b8	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fc9c1550e884455
  000be	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  000c1	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfd4d61203eb6f7d
  000c7	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  000ca	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fc5555555555555
  000d0	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  000d3	dd 5d e0	 fstp	 QWORD PTR _p$[ebp]

; 105  :     q = one + t * (qS1 + t * (qS2 + t * (qS3 + t * qS4)));

  000d6	dd 45 f0	 fld	 QWORD PTR _t$[ebp]
  000d9	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3fb3b8c5b12e9282
  000df	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfe6066c1b8d0159
  000e5	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  000e8	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@40002ae59c598ac8
  000ee	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  000f1	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@c0033a271c8a2d4b
  000f7	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  000fa	d9 e8		 fld1
  000fc	de c1		 faddp	 ST(1), ST(0)
  000fe	dd 5d d8	 fstp	 QWORD PTR _q$[ebp]

; 106  :     w = p / q;

  00101	dd 45 e0	 fld	 QWORD PTR _p$[ebp]
  00104	dc 75 d8	 fdiv	 QWORD PTR _q$[ebp]
  00107	dd 5d e8	 fstp	 QWORD PTR _w$[ebp]

; 107  :     return x + x * w;

  0010a	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  0010d	dc 4d e8	 fmul	 QWORD PTR _w$[ebp]
  00110	dc 45 08	 fadd	 QWORD PTR _x$[ebp]
  00113	e9 4b 01 00 00	 jmp	 $LN11@asin
$LN5@asin:

; 108  :   }
; 109  :   /* 1 > |x| >= 0.5 */
; 110  :   w = one - fabs (x);

  00118	83 ec 08	 sub	 esp, 8
  0011b	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  0011e	dd 1c 24	 fstp	 QWORD PTR [esp]
  00121	e8 00 00 00 00	 call	 _fabs
  00126	83 c4 08	 add	 esp, 8
  00129	d9 e8		 fld1
  0012b	de e1		 fsubrp	 ST(1), ST(0)
  0012d	dd 5d e8	 fstp	 QWORD PTR _w$[ebp]

; 111  :   t = w * 0.5;

  00130	dd 45 e8	 fld	 QWORD PTR _w$[ebp]
  00133	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3fe0000000000000
  00139	dd 5d f0	 fstp	 QWORD PTR _t$[ebp]

; 112  :   p = t * (pS0 + t * (pS1 + t * (pS2 + t * (pS3 + t * (pS4 + t * pS5)))));

  0013c	dd 45 f0	 fld	 QWORD PTR _t$[ebp]
  0013f	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3f023de10dfdf709
  00145	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3f49efe07501b288
  0014b	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  0014e	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfa48228b5688f3b
  00154	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  00157	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fc9c1550e884455
  0015d	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  00160	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfd4d61203eb6f7d
  00166	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  00169	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fc5555555555555
  0016f	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  00172	dd 5d e0	 fstp	 QWORD PTR _p$[ebp]

; 113  :   q = one + t * (qS1 + t * (qS2 + t * (qS3 + t * qS4)));

  00175	dd 45 f0	 fld	 QWORD PTR _t$[ebp]
  00178	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3fb3b8c5b12e9282
  0017e	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfe6066c1b8d0159
  00184	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  00187	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@40002ae59c598ac8
  0018d	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  00190	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@c0033a271c8a2d4b
  00196	dc 4d f0	 fmul	 QWORD PTR _t$[ebp]
  00199	d9 e8		 fld1
  0019b	de c1		 faddp	 ST(1), ST(0)
  0019d	dd 5d d8	 fstp	 QWORD PTR _q$[ebp]

; 114  :   s = sqrt (t);

  001a0	83 ec 08	 sub	 esp, 8
  001a3	dd 45 f0	 fld	 QWORD PTR _t$[ebp]
  001a6	dd 1c 24	 fstp	 QWORD PTR [esp]
  001a9	e8 00 00 00 00	 call	 _sqrt
  001ae	83 c4 08	 add	 esp, 8
  001b1	dd 5d d0	 fstp	 QWORD PTR _s$[ebp]

; 115  :   if (ix >= 0x3FEF3333) /* if |x| > 0.975 */

  001b4	81 7d fc 33 33
	ef 3f		 cmp	 DWORD PTR _ix$[ebp], 1072640819 ; 3fef3333H
  001bb	7c 29		 jl	 SHORT $LN8@asin

; 116  :   {
; 117  :     w = p / q;

  001bd	dd 45 e0	 fld	 QWORD PTR _p$[ebp]
  001c0	dc 75 d8	 fdiv	 QWORD PTR _q$[ebp]
  001c3	dd 5d e8	 fstp	 QWORD PTR _w$[ebp]

; 118  :     t = pio2_hi - (2.0 * (s + s * w) - pio2_lo);

  001c6	dd 45 d0	 fld	 QWORD PTR _s$[ebp]
  001c9	dc 4d e8	 fmul	 QWORD PTR _w$[ebp]
  001cc	dc 45 d0	 fadd	 QWORD PTR _s$[ebp]
  001cf	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@4000000000000000
  001d5	dc 25 00 00 00
	00		 fsub	 QWORD PTR __real@3c91a62633145c07
  001db	dc 2d 00 00 00
	00		 fsubr	 QWORD PTR __real@3ff921fb54442d18
  001e1	dd 5d f0	 fstp	 QWORD PTR _t$[ebp]

; 119  :   }

  001e4	eb 6b		 jmp	 SHORT $LN9@asin
$LN8@asin:

; 120  :   else
; 121  :   {
; 122  :     w = s;

  001e6	dd 45 d0	 fld	 QWORD PTR _s$[ebp]
  001e9	dd 5d e8	 fstp	 QWORD PTR _w$[ebp]

; 123  :     __LO (w) = 0;

  001ec	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _w$[ebp], 0

; 124  :     c = (t - w * w) / (s + w);

  001f3	dd 45 e8	 fld	 QWORD PTR _w$[ebp]
  001f6	dc 4d e8	 fmul	 QWORD PTR _w$[ebp]
  001f9	dc 6d f0	 fsubr	 QWORD PTR _t$[ebp]
  001fc	dd 45 d0	 fld	 QWORD PTR _s$[ebp]
  001ff	dc 45 e8	 fadd	 QWORD PTR _w$[ebp]
  00202	de f9		 fdivp	 ST(1), ST(0)
  00204	dd 5d c0	 fstp	 QWORD PTR _c$[ebp]

; 125  :     r = p / q;

  00207	dd 45 e0	 fld	 QWORD PTR _p$[ebp]
  0020a	dc 75 d8	 fdiv	 QWORD PTR _q$[ebp]
  0020d	dd 5d c8	 fstp	 QWORD PTR _r$[ebp]

; 126  :     p = 2.0 * s * r - (pio2_lo - 2.0 * c);

  00210	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@4000000000000000
  00216	dc 4d d0	 fmul	 QWORD PTR _s$[ebp]
  00219	dc 4d c8	 fmul	 QWORD PTR _r$[ebp]
  0021c	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@4000000000000000
  00222	dc 4d c0	 fmul	 QWORD PTR _c$[ebp]
  00225	dc 2d 00 00 00
	00		 fsubr	 QWORD PTR __real@3c91a62633145c07
  0022b	de e9		 fsubp	 ST(1), ST(0)
  0022d	dd 5d e0	 fstp	 QWORD PTR _p$[ebp]

; 127  :     q = pio4_hi - 2.0 * w;

  00230	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@4000000000000000
  00236	dc 4d e8	 fmul	 QWORD PTR _w$[ebp]
  00239	dc 2d 00 00 00
	00		 fsubr	 QWORD PTR __real@3fe921fb54442d18
  0023f	dd 5d d8	 fstp	 QWORD PTR _q$[ebp]

; 128  :     t = pio4_hi - (p - q);

  00242	dd 45 e0	 fld	 QWORD PTR _p$[ebp]
  00245	dc 65 d8	 fsub	 QWORD PTR _q$[ebp]
  00248	dc 2d 00 00 00
	00		 fsubr	 QWORD PTR __real@3fe921fb54442d18
  0024e	dd 5d f0	 fstp	 QWORD PTR _t$[ebp]
$LN9@asin:

; 129  :   }
; 130  :   if (hx > 0)

  00251	83 7d f8 00	 cmp	 DWORD PTR _hx$[ebp], 0
  00255	7e 07		 jle	 SHORT $LN10@asin

; 131  :   {
; 132  :     return t;

  00257	dd 45 f0	 fld	 QWORD PTR _t$[ebp]
  0025a	eb 07		 jmp	 SHORT $LN11@asin

; 133  :   }

  0025c	eb 05		 jmp	 SHORT $LN11@asin
$LN10@asin:

; 134  :   else
; 135  :   {
; 136  :     return -t;

  0025e	dd 45 f0	 fld	 QWORD PTR _t$[ebp]
  00261	d9 e0		 fchs
$LN11@asin:

; 137  :   }
; 138  : } /* asin */

  00263	8b e5		 mov	 esp, ebp
  00265	5d		 pop	 ebp
  00266	c3		 ret	 0
_asin	ENDP
_TEXT	ENDS
END
