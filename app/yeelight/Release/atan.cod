; Listing generated by Microsoft (R) Optimizing Compiler Version 19.13.26128.0 

	TITLE	C:\HelloX\personal\HelloX_OS\app\yeelight\hxlib\atan.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
_atanhi	DQ	03fddac670561bb4fr		; 0.463648
	DQ	03fe921fb54442d18r		; 0.785398
	DQ	03fef730bd281f69br		; 0.982794
	DQ	03ff921fb54442d18r		; 1.5708
_atanlo	DQ	03c7a2b7f222f65e2r		; 2.26988e-17
	DQ	03c81a62633145c07r		; 3.06162e-17
	DQ	03c7007887af0cbbdr		; 1.39033e-17
	DQ	03c91a62633145c07r		; 6.12323e-17
CONST	ENDS
PUBLIC	_atan
PUBLIC	__real@3f90ad3ae322da11
PUBLIC	__real@3fa97b4b24760deb
PUBLIC	__real@3fb10d66a0d03d51
PUBLIC	__real@3fb745cdc54c206e
PUBLIC	__real@3fc24924920083ff
PUBLIC	__real@3fd555555555550d
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff8000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@7e37e43c8800759c
PUBLIC	__real@bfa2b4442c6a6c2f
PUBLIC	__real@bfadde2d52defd9a
PUBLIC	__real@bfb3b0f2af749a6d
PUBLIC	__real@bfbc71c6fe231671
PUBLIC	__real@bfc999999998ebc4
PUBLIC	__real@bff0000000000000
EXTRN	_fabs:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@bfc999999998ebc4
CONST	SEGMENT
__real@bfc999999998ebc4 DQ 0bfc999999998ebc4r	; -0.2
CONST	ENDS
;	COMDAT __real@bfbc71c6fe231671
CONST	SEGMENT
__real@bfbc71c6fe231671 DQ 0bfbc71c6fe231671r	; -0.111111
CONST	ENDS
;	COMDAT __real@bfb3b0f2af749a6d
CONST	SEGMENT
__real@bfb3b0f2af749a6d DQ 0bfb3b0f2af749a6dr	; -0.0769188
CONST	ENDS
;	COMDAT __real@bfadde2d52defd9a
CONST	SEGMENT
__real@bfadde2d52defd9a DQ 0bfadde2d52defd9ar	; -0.0583357
CONST	ENDS
;	COMDAT __real@bfa2b4442c6a6c2f
CONST	SEGMENT
__real@bfa2b4442c6a6c2f DQ 0bfa2b4442c6a6c2fr	; -0.0365316
CONST	ENDS
;	COMDAT __real@7e37e43c8800759c
CONST	SEGMENT
__real@7e37e43c8800759c DQ 07e37e43c8800759cr	; 1e+300
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff8000000000000
CONST	SEGMENT
__real@3ff8000000000000 DQ 03ff8000000000000r	; 1.5
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fd555555555550d
CONST	SEGMENT
__real@3fd555555555550d DQ 03fd555555555550dr	; 0.333333
CONST	ENDS
;	COMDAT __real@3fc24924920083ff
CONST	SEGMENT
__real@3fc24924920083ff DQ 03fc24924920083ffr	; 0.142857
CONST	ENDS
;	COMDAT __real@3fb745cdc54c206e
CONST	SEGMENT
__real@3fb745cdc54c206e DQ 03fb745cdc54c206er	; 0.0909089
CONST	ENDS
;	COMDAT __real@3fb10d66a0d03d51
CONST	SEGMENT
__real@3fb10d66a0d03d51 DQ 03fb10d66a0d03d51r	; 0.0666107
CONST	ENDS
;	COMDAT __real@3fa97b4b24760deb
CONST	SEGMENT
__real@3fa97b4b24760deb DQ 03fa97b4b24760debr	; 0.0497688
CONST	ENDS
;	COMDAT __real@3f90ad3ae322da11
CONST	SEGMENT
__real@3f90ad3ae322da11 DQ 03f90ad3ae322da11r	; 0.0162858
CONST	ENDS
; Function compile flags: /Odtp
; File c:\hellox\personal\hellox_os\app\yeelight\hxlib\atan.c
;	COMDAT _atan
_TEXT	SEGMENT
tv192 = -52						; size = 8
_s2$ = -44						; size = 8
_s1$ = -36						; size = 8
_z$ = -28						; size = 8
_w$ = -20						; size = 8
_hx$ = -12						; size = 4
_id$ = -8						; size = 4
_ix$ = -4						; size = 4
_x$ = 8							; size = 8
_atan	PROC						; COMDAT

; 85   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H

; 86   :   double w, s1, s2, z;
; 87   :   int ix, hx, id;
; 88   : 
; 89   :   hx = __HI (x);

  00006	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp+4]
  00009	89 45 f4	 mov	 DWORD PTR _hx$[ebp], eax

; 90   :   ix = hx & 0x7fffffff;

  0000c	8b 4d f4	 mov	 ecx, DWORD PTR _hx$[ebp]
  0000f	81 e1 ff ff ff
	7f		 and	 ecx, 2147483647		; 7fffffffH
  00015	89 4d fc	 mov	 DWORD PTR _ix$[ebp], ecx

; 91   :   if (ix >= 0x44100000) /* if |x| >= 2^66 */

  00018	81 7d fc 00 00
	10 44		 cmp	 DWORD PTR _ix$[ebp], 1141899264 ; 44100000H
  0001f	7c 6f		 jl	 SHORT $LN6@atan

; 92   :   {
; 93   :     if (ix > 0x7ff00000 || (ix == 0x7ff00000 && (__LO (x) != 0)))

  00021	81 7d fc 00 00
	f0 7f		 cmp	 DWORD PTR _ix$[ebp], 2146435072 ; 7ff00000H
  00028	7f 0f		 jg	 SHORT $LN4@atan
  0002a	81 7d fc 00 00
	f0 7f		 cmp	 DWORD PTR _ix$[ebp], 2146435072 ; 7ff00000H
  00031	75 11		 jne	 SHORT $LN3@atan
  00033	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00037	74 0b		 je	 SHORT $LN3@atan
$LN4@atan:

; 94   :     {
; 95   :       return x + x; /* NaN */

  00039	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  0003c	dc 45 08	 fadd	 QWORD PTR _x$[ebp]
  0003f	e9 01 02 00 00	 jmp	 $LN18@atan
$LN3@atan:

; 96   :     }
; 97   :     if (hx > 0)

  00044	83 7d f4 00	 cmp	 DWORD PTR _hx$[ebp], 0
  00048	7e 23		 jle	 SHORT $LN5@atan

; 98   :     {
; 99   :       return atanhi[3] + atanlo[3];

  0004a	ba 08 00 00 00	 mov	 edx, 8
  0004f	6b c2 03	 imul	 eax, edx, 3
  00052	b9 08 00 00 00	 mov	 ecx, 8
  00057	6b d1 03	 imul	 edx, ecx, 3
  0005a	dd 80 00 00 00
	00		 fld	 QWORD PTR _atanhi[eax]
  00060	dc 82 00 00 00
	00		 fadd	 QWORD PTR _atanlo[edx]
  00066	e9 da 01 00 00	 jmp	 $LN18@atan

; 100  :     }

  0006b	eb 23		 jmp	 SHORT $LN6@atan
$LN5@atan:

; 101  :     else
; 102  :     {
; 103  :       return -atanhi[3] - atanlo[3];

  0006d	b8 08 00 00 00	 mov	 eax, 8
  00072	6b c8 03	 imul	 ecx, eax, 3
  00075	dd 81 00 00 00
	00		 fld	 QWORD PTR _atanhi[ecx]
  0007b	d9 e0		 fchs
  0007d	ba 08 00 00 00	 mov	 edx, 8
  00082	6b c2 03	 imul	 eax, edx, 3
  00085	dc a0 00 00 00
	00		 fsub	 QWORD PTR _atanlo[eax]
  0008b	e9 b5 01 00 00	 jmp	 $LN18@atan
$LN6@atan:

; 104  :     }
; 105  :   }
; 106  :   if (ix < 0x3fdc0000) /* |x| < 0.4375 */

  00090	81 7d fc 00 00
	dc 3f		 cmp	 DWORD PTR _ix$[ebp], 1071382528 ; 3fdc0000H
  00097	7d 33		 jge	 SHORT $LN7@atan

; 107  :   {
; 108  :     if (ix < 0x3e200000) /* |x| < 2^-29 */

  00099	81 7d fc 00 00
	20 3e		 cmp	 DWORD PTR _ix$[ebp], 1042284544 ; 3e200000H
  000a0	7d 1e		 jge	 SHORT $LN10@atan

; 109  :     {
; 110  :       if (huge + x > one) /* raise inexact */

  000a2	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@7e37e43c8800759c
  000a8	dc 45 08	 fadd	 QWORD PTR _x$[ebp]
  000ab	dc 1d 00 00 00
	00		 fcomp	 QWORD PTR __real@3ff0000000000000
  000b1	df e0		 fnstsw	 ax
  000b3	f6 c4 41	 test	 ah, 65			; 00000041H
  000b6	75 08		 jne	 SHORT $LN10@atan

; 111  :       {
; 112  :         return x;

  000b8	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  000bb	e9 85 01 00 00	 jmp	 $LN18@atan
$LN10@atan:

; 113  :       }
; 114  :     }
; 115  :     id = -1;

  000c0	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _id$[ebp], -1

; 116  :   }

  000c7	e9 ac 00 00 00	 jmp	 $LN16@atan
$LN7@atan:

; 117  :   else
; 118  :   {
; 119  :     x = fabs (x);

  000cc	83 ec 08	 sub	 esp, 8
  000cf	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  000d2	dd 1c 24	 fstp	 QWORD PTR [esp]
  000d5	e8 00 00 00 00	 call	 _fabs
  000da	83 c4 08	 add	 esp, 8
  000dd	dd 5d 08	 fstp	 QWORD PTR _x$[ebp]

; 120  :     if (ix < 0x3ff30000) /* |x| < 1.1875 */

  000e0	81 7d fc 00 00
	f3 3f		 cmp	 DWORD PTR _ix$[ebp], 1072889856 ; 3ff30000H
  000e7	7d 4f		 jge	 SHORT $LN11@atan

; 121  :     {
; 122  :       if (ix < 0x3fe60000) /* 7/16 <= |x| < 11/16 */

  000e9	81 7d fc 00 00
	e6 3f		 cmp	 DWORD PTR _ix$[ebp], 1072037888 ; 3fe60000H
  000f0	7d 26		 jge	 SHORT $LN13@atan

; 123  :       {
; 124  :         id = 0;

  000f2	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _id$[ebp], 0

; 125  :         x = (2.0 * x - one) / (2.0 + x);

  000f9	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@4000000000000000
  000ff	dc 4d 08	 fmul	 QWORD PTR _x$[ebp]
  00102	dc 25 00 00 00
	00		 fsub	 QWORD PTR __real@3ff0000000000000
  00108	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@4000000000000000
  0010e	dc 45 08	 fadd	 QWORD PTR _x$[ebp]
  00111	de f9		 fdivp	 ST(1), ST(0)
  00113	dd 5d 08	 fstp	 QWORD PTR _x$[ebp]

; 126  :       }

  00116	eb 1e		 jmp	 SHORT $LN14@atan
$LN13@atan:

; 127  :       else /* 11/16 <= |x| < 19/16 */
; 128  :       {
; 129  :         id = 1;

  00118	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _id$[ebp], 1

; 130  :         x = (x - one) / (x + one);

  0011f	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  00122	dc 25 00 00 00
	00		 fsub	 QWORD PTR __real@3ff0000000000000
  00128	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  0012b	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3ff0000000000000
  00131	de f9		 fdivp	 ST(1), ST(0)
  00133	dd 5d 08	 fstp	 QWORD PTR _x$[ebp]
$LN14@atan:

; 131  :       }
; 132  :     }

  00136	eb 40		 jmp	 SHORT $LN16@atan
$LN11@atan:

; 133  :     else
; 134  :     {
; 135  :       if (ix < 0x40038000) /* |x| < 2.4375 */

  00138	81 7d fc 00 80
	03 40		 cmp	 DWORD PTR _ix$[ebp], 1073971200 ; 40038000H
  0013f	7d 24		 jge	 SHORT $LN15@atan

; 136  :       {
; 137  :         id = 2;

  00141	c7 45 f8 02 00
	00 00		 mov	 DWORD PTR _id$[ebp], 2

; 138  :         x = (x - 1.5) / (one + 1.5 * x);

  00148	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  0014b	dc 25 00 00 00
	00		 fsub	 QWORD PTR __real@3ff8000000000000
  00151	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@3ff8000000000000
  00157	dc 4d 08	 fmul	 QWORD PTR _x$[ebp]
  0015a	d9 e8		 fld1
  0015c	de c1		 faddp	 ST(1), ST(0)
  0015e	de f9		 fdivp	 ST(1), ST(0)
  00160	dd 5d 08	 fstp	 QWORD PTR _x$[ebp]

; 139  :       }

  00163	eb 13		 jmp	 SHORT $LN16@atan
$LN15@atan:

; 140  :       else /* 2.4375 <= |x| < 2^66 */
; 141  :       {
; 142  :         id = 3;

  00165	c7 45 f8 03 00
	00 00		 mov	 DWORD PTR _id$[ebp], 3

; 143  :         x = -1.0 / x;

  0016c	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@bff0000000000000
  00172	dc 75 08	 fdiv	 QWORD PTR _x$[ebp]
  00175	dd 5d 08	 fstp	 QWORD PTR _x$[ebp]
$LN16@atan:

; 144  :       }
; 145  :     }
; 146  :   }
; 147  :   /* end of argument reduction */
; 148  :   z = x * x;

  00178	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  0017b	dc 4d 08	 fmul	 QWORD PTR _x$[ebp]
  0017e	dd 5d e4	 fstp	 QWORD PTR _z$[ebp]

; 149  :   w = z * z;

  00181	dd 45 e4	 fld	 QWORD PTR _z$[ebp]
  00184	dc 4d e4	 fmul	 QWORD PTR _z$[ebp]
  00187	dd 5d ec	 fstp	 QWORD PTR _w$[ebp]

; 150  :   /* break sum from i=0 to 10 aT[i] z**(i+1) into odd and even poly */
; 151  :   s1 = z * (aT0 + w * (aT2 + w * (aT4 + w * (aT6 + w * (aT8 + w * aT10)))));

  0018a	dd 45 ec	 fld	 QWORD PTR _w$[ebp]
  0018d	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3f90ad3ae322da11
  00193	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fa97b4b24760deb
  00199	dc 4d ec	 fmul	 QWORD PTR _w$[ebp]
  0019c	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fb10d66a0d03d51
  001a2	dc 4d ec	 fmul	 QWORD PTR _w$[ebp]
  001a5	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fb745cdc54c206e
  001ab	dc 4d ec	 fmul	 QWORD PTR _w$[ebp]
  001ae	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fc24924920083ff
  001b4	dc 4d ec	 fmul	 QWORD PTR _w$[ebp]
  001b7	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fd555555555550d
  001bd	dc 4d e4	 fmul	 QWORD PTR _z$[ebp]
  001c0	dd 5d dc	 fstp	 QWORD PTR _s1$[ebp]

; 152  :   s2 = w * (aT1 + w * (aT3 + w * (aT5 + w * (aT7 + w * aT9))));

  001c3	dd 45 ec	 fld	 QWORD PTR _w$[ebp]
  001c6	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@bfa2b4442c6a6c2f
  001cc	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfadde2d52defd9a
  001d2	dc 4d ec	 fmul	 QWORD PTR _w$[ebp]
  001d5	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfb3b0f2af749a6d
  001db	dc 4d ec	 fmul	 QWORD PTR _w$[ebp]
  001de	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfbc71c6fe231671
  001e4	dc 4d ec	 fmul	 QWORD PTR _w$[ebp]
  001e7	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@bfc999999998ebc4
  001ed	dc 4d ec	 fmul	 QWORD PTR _w$[ebp]
  001f0	dd 5d d4	 fstp	 QWORD PTR _s2$[ebp]

; 153  :   if (id < 0)

  001f3	83 7d f8 00	 cmp	 DWORD PTR _id$[ebp], 0
  001f7	7d 10		 jge	 SHORT $LN17@atan

; 154  :   {
; 155  :     return x - x * (s1 + s2);

  001f9	dd 45 dc	 fld	 QWORD PTR _s1$[ebp]
  001fc	dc 45 d4	 fadd	 QWORD PTR _s2$[ebp]
  001ff	dc 4d 08	 fmul	 QWORD PTR _x$[ebp]
  00202	dc 6d 08	 fsubr	 QWORD PTR _x$[ebp]
  00205	eb 3e		 jmp	 SHORT $LN18@atan

; 156  :   }

  00207	eb 3c		 jmp	 SHORT $LN18@atan
$LN17@atan:

; 157  :   else
; 158  :   {
; 159  :     z = atanhi[id] - ((x * (s1 + s2) - atanlo[id]) - x);

  00209	dd 45 dc	 fld	 QWORD PTR _s1$[ebp]
  0020c	dc 45 d4	 fadd	 QWORD PTR _s2$[ebp]
  0020f	dc 4d 08	 fmul	 QWORD PTR _x$[ebp]
  00212	8b 4d f8	 mov	 ecx, DWORD PTR _id$[ebp]
  00215	dc 24 cd 00 00
	00 00		 fsub	 QWORD PTR _atanlo[ecx*8]
  0021c	dc 65 08	 fsub	 QWORD PTR _x$[ebp]
  0021f	8b 55 f8	 mov	 edx, DWORD PTR _id$[ebp]
  00222	dc 2c d5 00 00
	00 00		 fsubr	 QWORD PTR _atanhi[edx*8]
  00229	dd 5d e4	 fstp	 QWORD PTR _z$[ebp]

; 160  :     return (hx < 0) ? -z : z;

  0022c	83 7d f4 00	 cmp	 DWORD PTR _hx$[ebp], 0
  00230	7d 0a		 jge	 SHORT $LN20@atan
  00232	dd 45 e4	 fld	 QWORD PTR _z$[ebp]
  00235	d9 e0		 fchs
  00237	dd 5d cc	 fstp	 QWORD PTR tv192[ebp]
  0023a	eb 06		 jmp	 SHORT $LN21@atan
$LN20@atan:
  0023c	dd 45 e4	 fld	 QWORD PTR _z$[ebp]
  0023f	dd 5d cc	 fstp	 QWORD PTR tv192[ebp]
$LN21@atan:
  00242	dd 45 cc	 fld	 QWORD PTR tv192[ebp]
$LN18@atan:

; 161  :   }
; 162  : } /* atan */

  00245	8b e5		 mov	 esp, ebp
  00247	5d		 pop	 ebp
  00248	c3		 ret	 0
_atan	ENDP
_TEXT	ENDS
END
