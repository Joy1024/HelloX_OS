; Listing generated by Microsoft (R) Optimizing Compiler Version 19.13.26128.0 

	TITLE	C:\HelloX\personal\HelloX_OS\app\yeelight\hxlib\atan2.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_atan2
PUBLIC	__real@0000000000000000
PUBLIC	__real@3ca1a62633145c07
PUBLIC	__real@3fe921fb54442d18
PUBLIC	__real@3ff921fb54442d18
PUBLIC	__real@4002d97c7f3321d2
PUBLIC	__real@400921fb54442d18
PUBLIC	__real@8000000000000000
PUBLIC	__real@bfe921fb54442d18
PUBLIC	__real@bff921fb54442d18
PUBLIC	__real@c002d97c7f3321d2
PUBLIC	__real@c00921fb54442d18
EXTRN	_atan:PROC
EXTRN	_fabs:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@c00921fb54442d18
CONST	SEGMENT
__real@c00921fb54442d18 DQ 0c00921fb54442d18r	; -3.14159
CONST	ENDS
;	COMDAT __real@c002d97c7f3321d2
CONST	SEGMENT
__real@c002d97c7f3321d2 DQ 0c002d97c7f3321d2r	; -2.35619
CONST	ENDS
;	COMDAT __real@bff921fb54442d18
CONST	SEGMENT
__real@bff921fb54442d18 DQ 0bff921fb54442d18r	; -1.5708
CONST	ENDS
;	COMDAT __real@bfe921fb54442d18
CONST	SEGMENT
__real@bfe921fb54442d18 DQ 0bfe921fb54442d18r	; -0.785398
CONST	ENDS
;	COMDAT __real@8000000000000000
CONST	SEGMENT
__real@8000000000000000 DQ 08000000000000000r	; -0
CONST	ENDS
;	COMDAT __real@400921fb54442d18
CONST	SEGMENT
__real@400921fb54442d18 DQ 0400921fb54442d18r	; 3.14159
CONST	ENDS
;	COMDAT __real@4002d97c7f3321d2
CONST	SEGMENT
__real@4002d97c7f3321d2 DQ 04002d97c7f3321d2r	; 2.35619
CONST	ENDS
;	COMDAT __real@3ff921fb54442d18
CONST	SEGMENT
__real@3ff921fb54442d18 DQ 03ff921fb54442d18r	; 1.5708
CONST	ENDS
;	COMDAT __real@3fe921fb54442d18
CONST	SEGMENT
__real@3fe921fb54442d18 DQ 03fe921fb54442d18r	; 0.785398
CONST	ENDS
;	COMDAT __real@3ca1a62633145c07
CONST	SEGMENT
__real@3ca1a62633145c07 DQ 03ca1a62633145c07r	; 1.22465e-16
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
; Function compile flags: /Odtp
; File c:\hellox\personal\hellox_os\app\yeelight\hxlib\atan2.c
;	COMDAT _atan2
_TEXT	SEGMENT
tv137 = -72						; size = 8
tv128 = -64						; size = 8
_z$ = -56						; size = 8
_k$ = -48						; size = 4
tv133 = -44						; size = 4
tv131 = -40						; size = 4
tv91 = -36						; size = 4
tv148 = -32						; size = 4
_ly$ = -28						; size = 4
_m$ = -24						; size = 4
_hx$ = -20						; size = 4
_ix$ = -16						; size = 4
_hy$ = -12						; size = 4
_lx$ = -8						; size = 4
_iy$ = -4						; size = 4
_y$ = 8							; size = 8
_x$ = 16						; size = 8
_atan2	PROC						; COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H

; 68   :   double z;
; 69   :   int k, m, hx, hy, ix, iy;
; 70   :   unsigned lx, ly;
; 71   : 
; 72   :   hx = __HI (x);

  00006	8b 45 14	 mov	 eax, DWORD PTR _x$[ebp+4]
  00009	89 45 ec	 mov	 DWORD PTR _hx$[ebp], eax

; 73   :   ix = hx & 0x7fffffff;

  0000c	8b 4d ec	 mov	 ecx, DWORD PTR _hx$[ebp]
  0000f	81 e1 ff ff ff
	7f		 and	 ecx, 2147483647		; 7fffffffH
  00015	89 4d f0	 mov	 DWORD PTR _ix$[ebp], ecx

; 74   :   lx = __LO (x);

  00018	8b 55 10	 mov	 edx, DWORD PTR _x$[ebp]
  0001b	89 55 f8	 mov	 DWORD PTR _lx$[ebp], edx

; 75   :   hy = __HI (y);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp+4]
  00021	89 45 f4	 mov	 DWORD PTR _hy$[ebp], eax

; 76   :   iy = hy & 0x7fffffff;

  00024	8b 4d f4	 mov	 ecx, DWORD PTR _hy$[ebp]
  00027	81 e1 ff ff ff
	7f		 and	 ecx, 2147483647		; 7fffffffH
  0002d	89 4d fc	 mov	 DWORD PTR _iy$[ebp], ecx

; 77   :   ly = __LO (y);

  00030	8b 55 08	 mov	 edx, DWORD PTR _y$[ebp]
  00033	89 55 e4	 mov	 DWORD PTR _ly$[ebp], edx

; 78   :   if (((ix | ((lx | -lx) >> 31)) > 0x7ff00000) || ((iy | ((ly | -ly) >> 31)) > 0x7ff00000)) /* x or y is NaN */

  00036	8b 45 f8	 mov	 eax, DWORD PTR _lx$[ebp]
  00039	f7 d8		 neg	 eax
  0003b	0b 45 f8	 or	 eax, DWORD PTR _lx$[ebp]
  0003e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00041	0b 45 f0	 or	 eax, DWORD PTR _ix$[ebp]
  00044	3d 00 00 f0 7f	 cmp	 eax, 2146435072		; 7ff00000H
  00049	77 16		 ja	 SHORT $LN11@atan2
  0004b	8b 4d e4	 mov	 ecx, DWORD PTR _ly$[ebp]
  0004e	f7 d9		 neg	 ecx
  00050	0b 4d e4	 or	 ecx, DWORD PTR _ly$[ebp]
  00053	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00056	0b 4d fc	 or	 ecx, DWORD PTR _iy$[ebp]
  00059	81 f9 00 00 f0
	7f		 cmp	 ecx, 2146435072		; 7ff00000H
  0005f	76 0b		 jbe	 SHORT $LN10@atan2
$LN11@atan2:

; 79   :   {
; 80   :     return x + y;

  00061	dd 45 10	 fld	 QWORD PTR _x$[ebp]
  00064	dc 45 08	 fadd	 QWORD PTR _y$[ebp]
  00067	e9 02 02 00 00	 jmp	 $LN8@atan2
$LN10@atan2:

; 81   :   }
; 82   :   if (((hx - 0x3ff00000) | lx) == 0) /* x = 1.0 */

  0006c	8b 55 ec	 mov	 edx, DWORD PTR _hx$[ebp]
  0006f	81 ea 00 00 f0
	3f		 sub	 edx, 1072693248		; 3ff00000H
  00075	0b 55 f8	 or	 edx, DWORD PTR _lx$[ebp]
  00078	75 16		 jne	 SHORT $LN12@atan2

; 83   :   {
; 84   :     return atan (y);

  0007a	83 ec 08	 sub	 esp, 8
  0007d	dd 45 08	 fld	 QWORD PTR _y$[ebp]
  00080	dd 1c 24	 fstp	 QWORD PTR [esp]
  00083	e8 00 00 00 00	 call	 _atan
  00088	83 c4 08	 add	 esp, 8
  0008b	e9 de 01 00 00	 jmp	 $LN8@atan2
$LN12@atan2:

; 85   :   }
; 86   :   m = ((hy >> 31) & 1) | ((hx >> 30) & 2); /* 2 * sign(x) + sign(y) */

  00090	8b 45 f4	 mov	 eax, DWORD PTR _hy$[ebp]
  00093	c1 f8 1f	 sar	 eax, 31			; 0000001fH
  00096	83 e0 01	 and	 eax, 1
  00099	8b 4d ec	 mov	 ecx, DWORD PTR _hx$[ebp]
  0009c	c1 f9 1e	 sar	 ecx, 30			; 0000001eH
  0009f	83 e1 02	 and	 ecx, 2
  000a2	0b c1		 or	 eax, ecx
  000a4	89 45 e8	 mov	 DWORD PTR _m$[ebp], eax

; 87   : 
; 88   :   /* when y = 0 */
; 89   :   if ((iy | ly) == 0)

  000a7	8b 55 fc	 mov	 edx, DWORD PTR _iy$[ebp]
  000aa	0b 55 e4	 or	 edx, DWORD PTR _ly$[ebp]
  000ad	75 34		 jne	 SHORT $LN2@atan2

; 90   :   {
; 91   :     switch (m)

  000af	8b 45 e8	 mov	 eax, DWORD PTR _m$[ebp]
  000b2	89 45 dc	 mov	 DWORD PTR tv91[ebp], eax
  000b5	83 7d dc 03	 cmp	 DWORD PTR tv91[ebp], 3
  000b9	77 28		 ja	 SHORT $LN2@atan2
  000bb	8b 4d dc	 mov	 ecx, DWORD PTR tv91[ebp]
  000be	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN43@atan2[ecx*4]
$LN14@atan2:

; 92   :     {
; 93   :       case 0:
; 94   :       case 1:
; 95   :       {
; 96   :         return y; /* atan(+-0,+anything) = +-0 */

  000c5	dd 45 08	 fld	 QWORD PTR _y$[ebp]
  000c8	e9 a1 01 00 00	 jmp	 $LN8@atan2
$LN15@atan2:

; 97   :       }
; 98   :       case 2:
; 99   :       {
; 100  :         return pi + tiny; /* atan(+0,-anything) = pi */

  000cd	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@400921fb54442d18
  000d3	e9 96 01 00 00	 jmp	 $LN8@atan2
$LN16@atan2:

; 101  :       }
; 102  :       case 3:
; 103  :       {
; 104  :         return -pi - tiny; /* atan(-0,-anything) = -pi */

  000d8	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@c00921fb54442d18
  000de	e9 8b 01 00 00	 jmp	 $LN8@atan2
$LN2@atan2:

; 105  :       }
; 106  :     }
; 107  :   }
; 108  :   /* when x = 0 */
; 109  :   if ((ix | lx) == 0)

  000e3	8b 55 f0	 mov	 edx, DWORD PTR _ix$[ebp]
  000e6	0b 55 f8	 or	 edx, DWORD PTR _lx$[ebp]
  000e9	75 22		 jne	 SHORT $LN17@atan2

; 110  :   {
; 111  :     return (hy < 0) ? -pi_o_2 - tiny : pi_o_2 + tiny;

  000eb	83 7d f4 00	 cmp	 DWORD PTR _hy$[ebp], 0
  000ef	7d 0b		 jge	 SHORT $LN39@atan2
  000f1	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@bff921fb54442d18
  000f7	dd 5d c0	 fstp	 QWORD PTR tv128[ebp]
  000fa	eb 09		 jmp	 SHORT $LN40@atan2
$LN39@atan2:
  000fc	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@3ff921fb54442d18
  00102	dd 5d c0	 fstp	 QWORD PTR tv128[ebp]
$LN40@atan2:
  00105	dd 45 c0	 fld	 QWORD PTR tv128[ebp]
  00108	e9 61 01 00 00	 jmp	 $LN8@atan2
$LN17@atan2:

; 112  :   }
; 113  : 
; 114  :   /* when x is INF */
; 115  :   if (ix == 0x7ff00000)

  0010d	81 7d f0 00 00
	f0 7f		 cmp	 DWORD PTR _ix$[ebp], 2146435072 ; 7ff00000H
  00114	0f 85 8b 00 00
	00		 jne	 $LN6@atan2

; 116  :   {
; 117  :     if (iy == 0x7ff00000)

  0011a	81 7d fc 00 00
	f0 7f		 cmp	 DWORD PTR _iy$[ebp], 2146435072 ; 7ff00000H
  00121	75 44		 jne	 SHORT $LN19@atan2

; 118  :     {
; 119  :       switch (m)

  00123	8b 45 e8	 mov	 eax, DWORD PTR _m$[ebp]
  00126	89 45 d8	 mov	 DWORD PTR tv131[ebp], eax
  00129	83 7d d8 03	 cmp	 DWORD PTR tv131[ebp], 3
  0012d	77 36		 ja	 SHORT $LN4@atan2
  0012f	8b 4d d8	 mov	 ecx, DWORD PTR tv131[ebp]
  00132	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN44@atan2[ecx*4]
$LN21@atan2:

; 120  :       {
; 121  :         case 0: /* atan(+INF,+INF) */
; 122  :         {
; 123  :           return pi_o_4 + tiny;

  00139	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@3fe921fb54442d18
  0013f	e9 2a 01 00 00	 jmp	 $LN8@atan2
$LN22@atan2:

; 124  :         }
; 125  :         case 1: /* atan(-INF,+INF) */
; 126  :         {
; 127  :           return -pi_o_4 - tiny;

  00144	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@bfe921fb54442d18
  0014a	e9 1f 01 00 00	 jmp	 $LN8@atan2
$LN23@atan2:

; 128  :         }
; 129  :         case 2: /* atan(+INF,-INF) */
; 130  :         {
; 131  :           return 3.0 * pi_o_4 + tiny;

  0014f	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@4002d97c7f3321d2
  00155	e9 14 01 00 00	 jmp	 $LN8@atan2
$LN24@atan2:

; 132  :         }
; 133  :         case 3: /* atan(-INF,-INF) */
; 134  :         {
; 135  :           return -3.0 * pi_o_4 - tiny;

  0015a	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@c002d97c7f3321d2
  00160	e9 09 01 00 00	 jmp	 $LN8@atan2
$LN4@atan2:

; 136  :         }
; 137  :       }
; 138  :     }

  00165	eb 3e		 jmp	 SHORT $LN6@atan2
$LN19@atan2:

; 139  :     else
; 140  :     {
; 141  :       switch (m)

  00167	8b 55 e8	 mov	 edx, DWORD PTR _m$[ebp]
  0016a	89 55 d4	 mov	 DWORD PTR tv133[ebp], edx
  0016d	83 7d d4 03	 cmp	 DWORD PTR tv133[ebp], 3
  00171	77 32		 ja	 SHORT $LN6@atan2
  00173	8b 45 d4	 mov	 eax, DWORD PTR tv133[ebp]
  00176	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN45@atan2[eax*4]
$LN25@atan2:

; 142  :       {
; 143  :         case 0: /* atan(+...,+INF) */
; 144  :         {
; 145  :           return zero;

  0017d	d9 ee		 fldz
  0017f	e9 ea 00 00 00	 jmp	 $LN8@atan2
$LN26@atan2:

; 146  :         }
; 147  :         case 1: /* atan(-...,+INF) */
; 148  :         {
; 149  :           return -zero;

  00184	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@8000000000000000
  0018a	e9 df 00 00 00	 jmp	 $LN8@atan2
$LN27@atan2:

; 150  :         }
; 151  :         case 2: /* atan(+...,-INF) */
; 152  :         {
; 153  :           return pi + tiny;

  0018f	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@400921fb54442d18
  00195	e9 d4 00 00 00	 jmp	 $LN8@atan2
$LN28@atan2:

; 154  :         }
; 155  :         case 3: /* atan(-...,-INF) */
; 156  :         {
; 157  :           return -pi - tiny;

  0019a	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@c00921fb54442d18
  001a0	e9 c9 00 00 00	 jmp	 $LN8@atan2
$LN6@atan2:

; 158  :         }
; 159  :       }
; 160  :     }
; 161  :   }
; 162  :   /* when y is INF */
; 163  :   if (iy == 0x7ff00000)

  001a5	81 7d fc 00 00
	f0 7f		 cmp	 DWORD PTR _iy$[ebp], 2146435072 ; 7ff00000H
  001ac	75 22		 jne	 SHORT $LN29@atan2

; 164  :   {
; 165  :     return (hy < 0) ? -pi_o_2 - tiny : pi_o_2 + tiny;

  001ae	83 7d f4 00	 cmp	 DWORD PTR _hy$[ebp], 0
  001b2	7d 0b		 jge	 SHORT $LN41@atan2
  001b4	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@bff921fb54442d18
  001ba	dd 5d b8	 fstp	 QWORD PTR tv137[ebp]
  001bd	eb 09		 jmp	 SHORT $LN42@atan2
$LN41@atan2:
  001bf	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@3ff921fb54442d18
  001c5	dd 5d b8	 fstp	 QWORD PTR tv137[ebp]
$LN42@atan2:
  001c8	dd 45 b8	 fld	 QWORD PTR tv137[ebp]
  001cb	e9 9e 00 00 00	 jmp	 $LN8@atan2
$LN29@atan2:

; 166  :   }
; 167  : 
; 168  :   /* compute y / x */
; 169  :   k = (iy - ix) >> 20;

  001d0	8b 4d fc	 mov	 ecx, DWORD PTR _iy$[ebp]
  001d3	2b 4d f0	 sub	 ecx, DWORD PTR _ix$[ebp]
  001d6	c1 f9 14	 sar	 ecx, 20			; 00000014H
  001d9	89 4d d0	 mov	 DWORD PTR _k$[ebp], ecx

; 170  :   if (k > 60) /* |y / x| > 2**60 */

  001dc	83 7d d0 3c	 cmp	 DWORD PTR _k$[ebp], 60	; 0000003cH
  001e0	7e 0b		 jle	 SHORT $LN30@atan2

; 171  :   {
; 172  :     z = pi_o_2 + 0.5 * pi_lo;

  001e2	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@3ff921fb54442d18
  001e8	dd 5d c8	 fstp	 QWORD PTR _z$[ebp]

; 173  :   }

  001eb	eb 32		 jmp	 SHORT $LN33@atan2
$LN30@atan2:

; 174  :   else if (hx < 0 && k < -60) /* |y| / x < -2**60 */

  001ed	83 7d ec 00	 cmp	 DWORD PTR _hx$[ebp], 0
  001f1	7d 0d		 jge	 SHORT $LN32@atan2
  001f3	83 7d d0 c4	 cmp	 DWORD PTR _k$[ebp], -60	; ffffffc4H
  001f7	7d 07		 jge	 SHORT $LN32@atan2

; 175  :   {
; 176  :     z = 0.0;

  001f9	d9 ee		 fldz
  001fb	dd 5d c8	 fstp	 QWORD PTR _z$[ebp]

; 177  :   }

  001fe	eb 1f		 jmp	 SHORT $LN33@atan2
$LN32@atan2:

; 178  :   else /* safe to do y / x */
; 179  :   {
; 180  :     z = atan (fabs (y / x));

  00200	dd 45 08	 fld	 QWORD PTR _y$[ebp]
  00203	dc 75 10	 fdiv	 QWORD PTR _x$[ebp]
  00206	83 ec 08	 sub	 esp, 8
  00209	dd 1c 24	 fstp	 QWORD PTR [esp]
  0020c	e8 00 00 00 00	 call	 _fabs
  00211	dd 1c 24	 fstp	 QWORD PTR [esp]
  00214	e8 00 00 00 00	 call	 _atan
  00219	83 c4 08	 add	 esp, 8
  0021c	dd 5d c8	 fstp	 QWORD PTR _z$[ebp]
$LN33@atan2:

; 181  :   }
; 182  :   switch (m)

  0021f	8b 55 e8	 mov	 edx, DWORD PTR _m$[ebp]
  00222	89 55 e0	 mov	 DWORD PTR tv148[ebp], edx
  00225	83 7d e0 00	 cmp	 DWORD PTR tv148[ebp], 0
  00229	74 0e		 je	 SHORT $LN34@atan2
  0022b	83 7d e0 01	 cmp	 DWORD PTR tv148[ebp], 1
  0022f	74 0d		 je	 SHORT $LN35@atan2
  00231	83 7d e0 02	 cmp	 DWORD PTR tv148[ebp], 2
  00235	74 17		 je	 SHORT $LN36@atan2
  00237	eb 26		 jmp	 SHORT $LN37@atan2
$LN34@atan2:

; 183  :   {
; 184  :     case 0: /* atan(+,+) */
; 185  :     {
; 186  :       return z;

  00239	dd 45 c8	 fld	 QWORD PTR _z$[ebp]
  0023c	eb 30		 jmp	 SHORT $LN8@atan2
$LN35@atan2:

; 187  :     }
; 188  :     case 1: /* atan(-,+) */
; 189  :     {
; 190  :       __HI (z) ^= 0x80000000;

  0023e	8b 45 cc	 mov	 eax, DWORD PTR _z$[ebp+4]
  00241	35 00 00 00 80	 xor	 eax, -2147483648	; 80000000H
  00246	89 45 cc	 mov	 DWORD PTR _z$[ebp+4], eax

; 191  :       return z;

  00249	dd 45 c8	 fld	 QWORD PTR _z$[ebp]
  0024c	eb 20		 jmp	 SHORT $LN8@atan2
$LN36@atan2:

; 192  :     }
; 193  :     case 2: /* atan(+,-) */
; 194  :     {
; 195  :       return pi - (z - pi_lo);

  0024e	dd 45 c8	 fld	 QWORD PTR _z$[ebp]
  00251	dc 25 00 00 00
	00		 fsub	 QWORD PTR __real@3ca1a62633145c07
  00257	dc 2d 00 00 00
	00		 fsubr	 QWORD PTR __real@400921fb54442d18
  0025d	eb 0f		 jmp	 SHORT $LN8@atan2
$LN37@atan2:

; 196  :     }
; 197  :     /* case 3: */
; 198  :     default: /* atan(-,-) */
; 199  :     {
; 200  :       return (z - pi_lo) - pi;

  0025f	dd 45 c8	 fld	 QWORD PTR _z$[ebp]
  00262	dc 25 00 00 00
	00		 fsub	 QWORD PTR __real@3ca1a62633145c07
  00268	dc 25 00 00 00
	00		 fsub	 QWORD PTR __real@400921fb54442d18
$LN8@atan2:

; 201  :     }
; 202  :   }
; 203  : } /* atan2 */

  0026e	8b e5		 mov	 esp, ebp
  00270	5d		 pop	 ebp
  00271	c3		 ret	 0
  00272	8b ff		 npad	 2
$LN43@atan2:
  00274	00 00 00 00	 DD	 $LN14@atan2
  00278	00 00 00 00	 DD	 $LN14@atan2
  0027c	00 00 00 00	 DD	 $LN15@atan2
  00280	00 00 00 00	 DD	 $LN16@atan2
$LN44@atan2:
  00284	00 00 00 00	 DD	 $LN21@atan2
  00288	00 00 00 00	 DD	 $LN22@atan2
  0028c	00 00 00 00	 DD	 $LN23@atan2
  00290	00 00 00 00	 DD	 $LN24@atan2
$LN45@atan2:
  00294	00 00 00 00	 DD	 $LN25@atan2
  00298	00 00 00 00	 DD	 $LN26@atan2
  0029c	00 00 00 00	 DD	 $LN27@atan2
  002a0	00 00 00 00	 DD	 $LN28@atan2
_atan2	ENDP
_TEXT	ENDS
END
