; Listing generated by Microsoft (R) Optimizing Compiler Version 19.13.26128.0 

	TITLE	C:\HelloX\personal\HelloX_OS\app\yeelight\hxlib\inet.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	__hx_htonl
PUBLIC	__hx_htons
PUBLIC	__hx_ntohl
PUBLIC	__hx_ntohs
PUBLIC	__hx_checksum
; Function compile flags: /Odtp
; File c:\hellox\personal\hellox_os\app\yeelight\hxlib\inet.c
;	COMDAT __hx_checksum
_TEXT	SEGMENT
_cksum$ = -4						; size = 4
_buffer$ = 8						; size = 4
_size$ = 12						; size = 4
__hx_checksum PROC					; COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 51   : 	unsigned long cksum = 0;

  00004	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _cksum$[ebp], 0
$LN2@hx_checksu:

; 52   : 	while (size > 1)

  0000b	83 7d 0c 01	 cmp	 DWORD PTR _size$[ebp], 1
  0000f	7e 20		 jle	 SHORT $LN3@hx_checksu

; 53   : 	{
; 54   : 		cksum += *buffer++;

  00011	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00014	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00017	03 4d fc	 add	 ecx, DWORD PTR _cksum$[ebp]
  0001a	89 4d fc	 mov	 DWORD PTR _cksum$[ebp], ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00020	83 c2 02	 add	 edx, 2
  00023	89 55 08	 mov	 DWORD PTR _buffer$[ebp], edx

; 55   : 		size -= sizeof(__u16);

  00026	8b 45 0c	 mov	 eax, DWORD PTR _size$[ebp]
  00029	83 e8 02	 sub	 eax, 2
  0002c	89 45 0c	 mov	 DWORD PTR _size$[ebp], eax

; 56   : 	}

  0002f	eb da		 jmp	 SHORT $LN2@hx_checksu
$LN3@hx_checksu:

; 57   : 	if (size)

  00031	83 7d 0c 00	 cmp	 DWORD PTR _size$[ebp], 0
  00035	74 0c		 je	 SHORT $LN4@hx_checksu

; 58   : 	{
; 59   : 		cksum += *(unsigned char*)buffer;

  00037	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0003a	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  0003d	03 55 fc	 add	 edx, DWORD PTR _cksum$[ebp]
  00040	89 55 fc	 mov	 DWORD PTR _cksum$[ebp], edx
$LN4@hx_checksu:

; 60   : 	}
; 61   : 	cksum = (cksum >> 16) + (cksum & 0xffff);

  00043	8b 45 fc	 mov	 eax, DWORD PTR _cksum$[ebp]
  00046	c1 e8 10	 shr	 eax, 16			; 00000010H
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _cksum$[ebp]
  0004c	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00052	03 c1		 add	 eax, ecx
  00054	89 45 fc	 mov	 DWORD PTR _cksum$[ebp], eax

; 62   : 	cksum += (cksum >> 16);

  00057	8b 55 fc	 mov	 edx, DWORD PTR _cksum$[ebp]
  0005a	c1 ea 10	 shr	 edx, 16			; 00000010H
  0005d	03 55 fc	 add	 edx, DWORD PTR _cksum$[ebp]
  00060	89 55 fc	 mov	 DWORD PTR _cksum$[ebp], edx

; 63   : 	return (__u16)(~cksum);

  00063	8b 45 fc	 mov	 eax, DWORD PTR _cksum$[ebp]
  00066	f7 d0		 not	 eax

; 64   : }

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
__hx_checksum ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\hellox\personal\hellox_os\app\yeelight\hxlib\inet.c
;	COMDAT __hx_ntohs
_TEXT	SEGMENT
_n$ = 8							; size = 2
__hx_ntohs PROC						; COMDAT

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 42   : 	return _hx_htons(n);

  00003	0f b7 45 08	 movzx	 eax, WORD PTR _n$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 __hx_htons
  0000d	83 c4 04	 add	 esp, 4

; 43   : }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
__hx_ntohs ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\hellox\personal\hellox_os\app\yeelight\hxlib\inet.c
;	COMDAT __hx_ntohl
_TEXT	SEGMENT
_n$ = 8							; size = 4
__hx_ntohl PROC						; COMDAT

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 37   : 	return _hx_htonl(n);

  00003	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 __hx_htonl
  0000c	83 c4 04	 add	 esp, 4

; 38   : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
__hx_ntohl ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\hellox\personal\hellox_os\app\yeelight\hxlib\inet.c
;	COMDAT __hx_htons
_TEXT	SEGMENT
_n$ = 8							; size = 2
__hx_htons PROC						; COMDAT

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	return ((n & 0xff) << 8) | ((n & 0xff00) >> 8);

  00003	0f b7 45 08	 movzx	 eax, WORD PTR _n$[ebp]
  00007	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0000c	c1 e0 08	 shl	 eax, 8
  0000f	0f b7 4d 08	 movzx	 ecx, WORD PTR _n$[ebp]
  00013	81 e1 00 ff 00
	00		 and	 ecx, 65280		; 0000ff00H
  00019	c1 f9 08	 sar	 ecx, 8
  0001c	0b c1		 or	 eax, ecx

; 32   : }

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
__hx_htons ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\hellox\personal\hellox_os\app\yeelight\hxlib\inet.c
;	COMDAT __hx_htonl
_TEXT	SEGMENT
_n$ = 8							; size = 4
__hx_htonl PROC						; COMDAT

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 23   : 	return ((n & 0xff) << 24) |

  00003	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  00006	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0000b	c1 e0 18	 shl	 eax, 24			; 00000018H
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _n$[ebp]
  00011	81 e1 00 ff 00
	00		 and	 ecx, 65280		; 0000ff00H
  00017	c1 e1 08	 shl	 ecx, 8
  0001a	0b c1		 or	 eax, ecx
  0001c	8b 55 08	 mov	 edx, DWORD PTR _n$[ebp]
  0001f	81 e2 00 00 ff
	00		 and	 edx, 16711680		; 00ff0000H
  00025	c1 ea 08	 shr	 edx, 8
  00028	0b c2		 or	 eax, edx
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _n$[ebp]
  0002d	81 e1 00 00 00
	ff		 and	 ecx, -16777216		; ff000000H
  00033	c1 e9 18	 shr	 ecx, 24			; 00000018H
  00036	0b c1		 or	 eax, ecx

; 24   : 		((n & 0xff00) << 8) |
; 25   : 		((n & 0xff0000UL) >> 8) |
; 26   : 		((n & 0xff000000UL) >> 24);
; 27   : }

  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
__hx_htonl ENDP
_TEXT	ENDS
END
