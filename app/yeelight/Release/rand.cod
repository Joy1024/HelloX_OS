; Listing generated by Microsoft (R) Optimizing Compiler Version 19.13.26128.0 

	TITLE	C:\HelloX\personal\HelloX_OS\app\yeelight\hxlib\rand.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_next	DD	01H
_DATA	ENDS
PUBLIC	_rand
PUBLIC	_srand
; Function compile flags: /Odtp
; File c:\hellox\personal\hellox_os\app\yeelight\hxlib\rand.c
;	COMDAT _do_rand
_TEXT	SEGMENT
_quotient$ = -12					; size = 4
_remainder$ = -8					; size = 4
_t$ = -4						; size = 4
_value$ = 8						; size = 4
_do_rand PROC						; COMDAT

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 29   : 	long quotient, remainder, t;
; 30   : 	
; 31   : 	quotient = *value / 127773L;

  00006	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00009	8b 00		 mov	 eax, DWORD PTR [eax]
  0000b	33 d2		 xor	 edx, edx
  0000d	b9 1d f3 01 00	 mov	 ecx, 127773		; 0001f31dH
  00012	f7 f1		 div	 ecx
  00014	89 45 f4	 mov	 DWORD PTR _quotient$[ebp], eax

; 32   : 	remainder = *value % 127773L;

  00017	8b 55 08	 mov	 edx, DWORD PTR _value$[ebp]
  0001a	8b 02		 mov	 eax, DWORD PTR [edx]
  0001c	33 d2		 xor	 edx, edx
  0001e	b9 1d f3 01 00	 mov	 ecx, 127773		; 0001f31dH
  00023	f7 f1		 div	 ecx
  00025	89 55 f8	 mov	 DWORD PTR _remainder$[ebp], edx

; 33   : 	t = 16807L * remainder - 2836L * quotient;

  00028	69 55 f8 a7 41
	00 00		 imul	 edx, DWORD PTR _remainder$[ebp], 16807
  0002f	69 45 f4 14 0b
	00 00		 imul	 eax, DWORD PTR _quotient$[ebp], 2836
  00036	2b d0		 sub	 edx, eax
  00038	89 55 fc	 mov	 DWORD PTR _t$[ebp], edx

; 34   : 	if (t <= 0)

  0003b	83 7d fc 00	 cmp	 DWORD PTR _t$[ebp], 0
  0003f	7f 0c		 jg	 SHORT $LN2@do_rand

; 35   : 	{
; 36   : 		t += 0x7FFFFFFFL;

  00041	8b 4d fc	 mov	 ecx, DWORD PTR _t$[ebp]
  00044	81 c1 ff ff ff
	7f		 add	 ecx, 2147483647		; 7fffffffH
  0004a	89 4d fc	 mov	 DWORD PTR _t$[ebp], ecx
$LN2@do_rand:

; 37   : 	}
; 38   : 	
; 39   : 	return ((*value = t) % ((unsigned long)RAND_MAX + 1));

  0004d	8b 55 08	 mov	 edx, DWORD PTR _value$[ebp]
  00050	8b 45 fc	 mov	 eax, DWORD PTR _t$[ebp]
  00053	89 02		 mov	 DWORD PTR [edx], eax
  00055	8b 45 fc	 mov	 eax, DWORD PTR _t$[ebp]
  00058	33 d2		 xor	 edx, edx
  0005a	b9 00 00 00 80	 mov	 ecx, -2147483648	; 80000000H
  0005f	f7 f1		 div	 ecx
  00061	8b c2		 mov	 eax, edx

; 40   : }

  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
_do_rand ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\hellox\personal\hellox_os\app\yeelight\hxlib\rand.c
;	COMDAT _srand
_TEXT	SEGMENT
_seed$ = 8						; size = 4
_srand	PROC						; COMDAT

; 54   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 55   : 	next = seed;

  00003	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  00006	a3 00 00 00 00	 mov	 DWORD PTR _next, eax

; 56   : }

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
_srand	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\hellox\personal\hellox_os\app\yeelight\hxlib\rand.c
;	COMDAT _rand
_TEXT	SEGMENT
_rand	PROC						; COMDAT

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	return do_rand(&next);

  00003	68 00 00 00 00	 push	 OFFSET _next
  00008	e8 00 00 00 00	 call	 _do_rand
  0000d	83 c4 04	 add	 esp, 4

; 48   : }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
_rand	ENDP
_TEXT	ENDS
END
